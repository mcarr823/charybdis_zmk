#include "keys_de_swiss.h"
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// / {
//     chosen { zmk,matrix_transform = &default_transform; };
// };

/ {
    /* input config for mouse move mode */

    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 3 4>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <2>;

        bindings = <&ib_toggle_layer 4>;
    };

    /* input config for snipe mode */

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <2>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <4>;
    };

    /* input config for mouse scroll mode */

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <1>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 14>;
    };

    /* define a resolution down scaler only for INPUT_REL_WHEEL */

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    /* adjust cooldown waiting period for mouse key layer after activated */

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    // #define QUERTZ    0
    // #define NUMBERS   1
    // #define NAV-FUN   2
    // #define MAC       3
    // #define MAC-NUM   4
    // #define MAC-NAV   5
    // #define GAME      6
    // #define GAME-NUM  7
    // #define GAME-NAV  8
    // #define SCROLL    9
    // #define SNIPER   10
    // #define FN       11

    combos {
        compatible = "zmk,combos";

        left_bootloader {
            bindings = <&bootloader>;
            key-positions = <0 20>;
        };

        right_bootloader {
            bindings = <&bootloader>;
            key-positions = <9 29>;
        };
    };

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
            flavor = "balanced";
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            hold-trigger-on-release;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            flavor = "balanced";
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
  &kp Q  &kp W        &kp E          &kp R         &kp T              &kp Y        &kp U          &kp I         &kp O        &kp P
  &kp A  &hml LALT S  &hml LSHIFT D  &hml LCTRL F  &hml LGUI G    &hmr RGUI H  &hmr RCTRL J   &hmr RSHIFT K  &hmr RALT L  &kp APOSTROPHE
  &kp Z  &kp X        &kp C          &kp V         &kp B              &kp N        &kp M          &kp COMMA     &kp DOT      &kp SLASH
                        &mo 3          &lt 1 ENTER         &mo 2        &mo 4    &kp SPACE

            >;
        };

        Navigation {
            label = "Navigation";
            bindings = <
  &none  &none       &kp PAGE_UP    &none    &none    &none              &none     &kp UP_ARROW      &none              &kp DELETE
  &none  &kp HOME    &kp PAGE_DOWN  &kp END  &none    &kp RC(PAGE_UP)    &kp LEFT  &kp DOWN          &kp RIGHT          &none
  &none  &kp ESCAPE  &none          &kp TAB  &none    &kp RC(PAGE_DOWN)  &none     &kp RA(RC(LEFT))  &kp RA(RC(RIGHT))  &none
                        &trans         &trans   &trans     &trans     &trans
            >;
        };

        Number {
            label = "Number";
            bindings = <
  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                       &kp N6      &kp N7      &kp N8      &kp N9      &kp N0
  &none  &kp GRAVE  &kp MINUS  &kp EQUAL  &none    &none  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &kp SEMICOLON
  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)   &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)
                              &trans        &trans        &trans    &trans        &trans
            >;
        };

        Media {
            label = "Media";
            bindings = <
  &kp F1  &kp F2                 &kp F3                 &kp F4                 &kp F5    &kp F6          &kp F7        &kp F8        &kp F9        &kp F10
  &none   &kp LS(LA(LC(LEFT)))   &kp LA(LC(LS(ENTER)))  &kp LS(LA(LC(RIGHT)))  &none     &none           &kp LS(LA(LC(MINUS)))  &kp LS(LA(LC(SPACE)))  &kp LA(LC(LS(EQUAL)))      &none
  &none   &none  &none  &none  &none     &bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 4
                                 &trans                 &trans                 &trans    &trans          &trans
            >;
        };

        Scroll {
            bindings = <
  &trans  &trans    &trans    &trans     &trans    &trans  &trans    &trans    &trans     &trans
  &trans  &trans &trans &trans  &trans    &trans  &trans &trans &trans  &trans
  &trans  &trans    &trans    &trans     &trans    &trans  &trans    &trans    &trans     &trans
                  &mkp MB3 &mkp MB1 &mkp MB2    &trans  &trans
            >;

            label = "Scroll";
        };

    };
};
